{"version":3,"sources":["symbols.js","calculator.js","reportWebVitals.js","index.js"],"names":["symbols","id","value","Calculator","useState","displayValue","setdisplay","number1","setnumber1","opt","setopt","className","type","readOnly","map","n","onClick","operation","indexOf","toString","length","ans","parseFloat","console","log","performOperation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAwEeA,G,MAvEf,CACI,CACIC,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,KAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,KAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,EACJC,MAAO,GAEX,CACID,GAAI,GACJC,MAAO,GAEX,CACID,GAAI,GACJC,MAAO,KAEX,CACID,GAAI,GACJC,MAAO,KAEX,CACID,GAAI,GACJC,MAAO,GAEX,CACID,GAAI,GACJC,MAAO,KAEX,CACID,GAAI,GACJC,MAAO,KAEX,CACID,GAAI,GACJC,MAAO,OCqBAC,MArFf,WAAuB,IAAD,EACiBC,mBAAS,IAD1B,mBACXC,EADW,KACGC,EADH,OAEYF,mBAAS,IAFrB,mBAEXG,EAFW,KAEFC,EAFE,OAGIJ,mBAAS,IAHb,mBAGXK,EAHW,KAGNC,EAHM,KAyElB,OACQ,sBAAKC,UAAU,YAAf,UACI,uBAAOC,KAAK,UAAUD,UAAU,UAAUT,MAAOG,EAAcQ,UAAQ,IAEnEb,EAAQc,KAAI,SAAAC,GAAC,OACT,wBAAQJ,UAAkB,KAAPI,EAAEd,GAAU,YAAY,MAAkBe,QAAS,kBAzE1F,SAA0BC,GACtB,OAAOA,GACH,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDX,EAAWD,EAAeY,GAC1B,MACJ,IAAK,KAC8B,GAA5BZ,EAAaa,QAAQ,MACpBZ,EAAWD,EAAeY,GAE9B,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACyC,GAAvCZ,EAAac,WAAWD,QAAQ,MAAYb,EAAac,WAAWD,QAAQ,MAAMb,EAAae,OAAO,IACrGZ,EAAWH,GACXC,EAAW,IACXI,EAAOO,IAEX,MACJ,IAAK,IACD,IAA0C,GAAvCZ,EAAac,WAAWD,QAAQ,MAAYb,EAAac,WAAWD,QAAQ,MAAMb,EAAae,OAAO,EAAE,CACvG,IAAIC,EAAI,GACR,OAAOZ,GACH,IAAK,IACDY,EAAMC,WAAWf,GAASe,WAAWjB,GACrC,MACJ,IAAK,IACDgB,EAAMC,WAAWf,GAASe,WAAWjB,GACrC,MACJ,IAAK,IACDgB,EAAMC,WAAWf,GAASe,WAAWjB,GACrC,MACJ,IAAK,IAEGgB,EAD2B,IAA3BC,WAAWjB,GACL,qBAGAiB,WAAWf,GAASe,WAAWjB,GAEzC,MACJ,QACIkB,QAAQC,IAAI,+BAEpBlB,EAAW,GAAGe,GACdb,EAAW,IACXE,EAAO,IAEX,MACJ,IAAK,IACDJ,EAAW,IACXE,EAAW,IACXE,EAAO,IACP,MACJ,QACIa,QAAQC,IAAI,4BASwEC,CAAiBV,EAAEb,QAA/F,SAAyGa,EAAEb,OAApDa,EAAEd,WCtElEyB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16c77d28.chunk.js","sourcesContent":["const symbols = \r\n[\r\n    {\r\n        id: 0,\r\n        value: 1\r\n    },\r\n    {\r\n        id: 1,\r\n        value: 2\r\n    },\r\n    {\r\n        id: 2,\r\n        value: 3\r\n    },\r\n    {\r\n        id: 3,\r\n        value: '+'\r\n    },\r\n    {\r\n        id: 4,\r\n        value: 4\r\n    },\r\n    {\r\n        id: 5,\r\n        value: 5\r\n    },\r\n    {\r\n        id: 6,\r\n        value: 6\r\n    },\r\n    {\r\n        id: 7,\r\n        value: '-'\r\n    },\r\n    {\r\n        id: 8,\r\n        value: 7\r\n    },\r\n    {\r\n        id: 9,\r\n        value: 8\r\n    },\r\n    {\r\n        id: 10,\r\n        value: 9\r\n    },\r\n    {\r\n        id: 11,\r\n        value: 'x'\r\n    },\r\n    {\r\n        id: 12,\r\n        value: '.'\r\n    },\r\n    {\r\n        id: 13,\r\n        value: 0\r\n    },\r\n    {\r\n        id: 14,\r\n        value: 'C'\r\n    },\r\n    {\r\n        id: 15,\r\n        value: '/'\r\n    },\r\n    {\r\n        id: 16,\r\n        value: '='\r\n    }\r\n];\r\n\r\nexport default symbols;","import React, { useState } from 'react';\r\nimport './calculator.css';\r\nimport symbols from './symbols';\r\n\r\nfunction Calculator() {\r\n    const [displayValue, setdisplay] = useState('');\r\n    const [number1, setnumber1] = useState('');\r\n    const [opt, setopt] = useState('');\r\n\r\n    function performOperation(operation) {\r\n        switch(operation) {\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n            case 9:\r\n                setdisplay(displayValue + operation);\r\n                break;\r\n            case '.':\r\n                if(displayValue.indexOf('.')==-1) {\r\n                    setdisplay(displayValue + operation);\r\n                }\r\n                break;\r\n            case '+':\r\n            case '-':\r\n            case 'x':\r\n            case '/':\r\n                if(displayValue.toString().indexOf('.')==-1 || displayValue.toString().indexOf('.')==displayValue.length-1){\r\n                    setnumber1(displayValue);\r\n                    setdisplay('');\r\n                    setopt(operation);\r\n                }\r\n                break;\r\n            case '=':\r\n                if(displayValue.toString().indexOf('.')==-1 || displayValue.toString().indexOf('.')==displayValue.length-1){\r\n                    var ans='';\r\n                    switch(opt){\r\n                        case '+':\r\n                            ans = parseFloat(number1)+parseFloat(displayValue);\r\n                            break;\r\n                        case '-':\r\n                            ans = parseFloat(number1)-parseFloat(displayValue);\r\n                            break;\r\n                        case 'x':\r\n                            ans = parseFloat(number1)*parseFloat(displayValue);\r\n                            break;\r\n                        case '/':\r\n                            if (parseFloat(displayValue)===0.0){\r\n                                ans = 'Cannot Divide by 0';\r\n                            }\r\n                            else {\r\n                                ans = parseFloat(number1)/parseFloat(displayValue);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            console.log('No proper operator selected');\r\n                    }\r\n                    setdisplay(''+ans);\r\n                    setnumber1('');\r\n                    setopt('');\r\n                }\r\n                break;\r\n            case 'C':\r\n                setdisplay('');\r\n                setnumber1('');\r\n                setopt('');\r\n                break;\r\n            default:\r\n                console.log(\"Select a Valid Operator\");\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n                <input type=\"textbox\" className=\"display\" value={displayValue} readOnly />                \r\n                {\r\n                    symbols.map(n => (\r\n                        <button className={n.id===16 ? \"btn large\":\"btn\"} key={n.id} onClick={() => performOperation(n.value)} >{n.value}</button>\r\n                    ))\r\n                }\r\n            </div>\r\n           );\r\n}\r\n\r\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Calculator from './calculator';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}